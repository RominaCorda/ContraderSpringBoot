// Generated by CoffeeScript 1.12.7
(function () {
    var exports;

    exports = this;

    exports.addNew = function () {
        $('#scopename').text('Add new scope');
        $('#scopesave').val('Add');
        $('#id').val('-1');
        $('#name').val('');
        $('input:checkbox').prop('checked', false);
    };

    exports.highlightSelected = function () {
        $('.scope').each(function (index, scope) {
            return $(scope).removeClass('active');
        });
        return $('.scope').each(function (index, scope) {
            var selectedScope;
            selectedScope = $('#scopename').html();
            if (selectedScope === scope.innerText || selectedScope === scope.innerText.substring(0, scope.innerText.length - 1)) {
                $(scope).addClass('active');
            }
        });
    };

    exports.scopeValid = function () {
        var blank, currentScopeName, duplicate;
        currentScopeName = $('#name').val();
        blank = false;
        duplicate = false;
        if (currentScopeName === '') {
            blank = true;
        }
        $('.scope').each(function (index, scope) {
            var sameName, scopeName;
            scopeName = scope.innerText;
            sameName = currentScopeName === scopeName || currentScopeName === scopeName.substr(0, scopeName.length - 1);
            if (sameName) {
                return duplicate = true;
            }
        });
        if (blank) {
            showWarningFieldIsBlank();
        }
        if (duplicate) {
            showWarningFieldAlreadyExists();
        }
        return !blank && !duplicate;
    };

    exports.scopeEdited = function () {
        var currentScopeId, currentScopeName, edited;
        edited = true;
        currentScopeId = $("#id").val();
        currentScopeName = $('#name').val();
        $('.scope').each(function (index, scope) {
            var sameId, sameName, scopeHref, scopeId, scopeName;
            scopeHref = $(scope).attr('href');
            scopeId = scopeHref.substr(scopeHref.indexOf('=') + 1);
            scopeName = scope.innerText;
            sameId = currentScopeId === scopeId;
            sameName = currentScopeName === scopeName || currentScopeName === scopeName.substr(0, scopeName.length - 1);
            return edited = !(sameId && sameName);
        });
        return edited;
    };

    exports.showWarningFieldIsBlank = function () {
        $('.scope-duplicate').hide();
        $('.form-error').show();
        return $('#name').addClass('is-invalid-input');
    };

    exports.showWarningFieldAlreadyExists = function () {
        $('.scope-duplicate').show();
        $('.form-error').removeClass('is-visible');
        $('.form-error').hide();
        return $('#name').addClass('is-invalid-input');
    };

    exports.removeWarnings = function () {
        $('.form-error').removeClass('is-visible');
        $('.form-error').hide();
        $('.scope-duplicate').hide();
        return $('#name').removeClass('is-invalid-input');
    };

    exports.persistScope = function () {
        event.preventDefault();
        if (!scopeEdited()) {
            selectAll();
            console.log('');
            return $('#scopeform').submit();
        } else if (scopeValid()) {
            removeWarnings();
            $('#scope-save-confirm').foundation('open');
            return $(".close-button").click(function () {
                selectAll();
                console.log('');
                return $('#scopeform').submit();
            });
        }
    };

    exports.selectAll = function () {
        $('.viewer').each(function (index, item) {
            return $(this).attr('selected', true);
        });
        return $('.template').each(function (index, item) {
            return $(this).attr('selected', true);
        });
    };

    exports.deleteScope = function (scopeId) {
        $('#scope-delete-confirm').foundation('open');
        $("#scope-delete-yes").click(function () {
            return window.location.href = "deletescope?id=" + scopeId;
        });
        return $("#scope-delete-no").click(function () {
            return $('#scope-delete-confirm').foundation('close');
        });
    };

    exports.showUsers = function () {
        $('#show-users').foundation('open');
        return $('#btn-add-viewers').click(function () {
            $('.users:selected').each(function (index, user) {
                $('#viewers').append($('<option>', {
                    value: $(user).text(),
                    text: $(user).text(),
                    "class": 'viewer'
                }));
                $('#owner').append($('<option>', {
                    value: $(user).text(),
                    text: $(user).text()
                }));
                return $('#add-viewers option[value="' + $(user).text() + '"]').remove();
            });
            return $('#show-users').foundation('close');
        });
    };

    exports.removeViewers = function () {
        return $('#viewers option:selected').each(function (index, viewer) {
            if ($(viewer).text() === "admin") {

            } else {
                $('#viewers option[value="' + $(viewer).text() + '"]').remove();
                $('#owner option[value="' + $(viewer).text() + '"]').remove();
                return $('#add-viewers').append($('<option>', {
                    "class": "users",
                    value: $(viewer).text(),
                    text: $(viewer).text()
                }));
            }
        });
    };

    exports.showTemplates = function () {
        $('#show-templates').foundation('open');
        return $('#btn-add-templates').click(function () {
            $('.templates:selected').each(function (index, template) {
                $('#templates').append($('<option>', {
                    value: $(template).text(),
                    text: $(template).text(),
                    "class": 'template'
                }));
                return $('#add-templates option[value="' + $(template).text() + '"]').remove();
            });
            return $('#show-templates').foundation('close');
        });
    };

    exports.removeTemplates = function () {
        return $('#templates option:selected').each(function (index, template) {
            $('#templates option[value="' + $(template).text() + '"]').remove();
            return $('#add-templates').append($('<option>', {
                "class": "templates",
                value: $(template).text(),
                text: $(template).text()
            }));
        });
    };

    $('.scope-duplicate').on('show', (function () {
        $('.form-error').removeClass('is-visible');
        $('#name').addClass('is-invalid-input');
    }));

    highlightSelected();

}).call(this);

//# sourceMappingURL=mngscopes.js.map
